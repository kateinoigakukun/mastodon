{
  "version": 3,
  "sources": ["../src/boot.js"],
  "sourcesContent": ["async function registerServiceWorker() {\n  const oldRegistrations = await navigator.serviceWorker.getRegistrations()\n  for (const registration of oldRegistrations) {\n    if (registration.installing.state === \"installing\") {\n      return;\n    }\n  }\n\n  await navigator.serviceWorker.register(\"/rails.sw.js\", {\n    scope: \"/\", type: \"module\"\n  });\n}\n\nasync function boot({ bootMessage, bootProgress, bootConsoleOutput }) {\n  if (!(\"serviceWorker\" in navigator)) {\n    console.error(\"Service Worker is not supported in this browser.\");\n    return;\n  }\n  if (navigator.serviceWorker.controller) {\n    console.log(\"Service Worker already active.\");\n    return navigator.serviceWorker.ready;\n  }\n\n  await registerServiceWorker();\n\n  bootMessage.textContent = \"Waiting for Service Worker to activate...\";\n\n  navigator.serviceWorker.addEventListener(\"message\", function(event) {\n    switch (event.data.type) {\n      case \"progress\": {\n        bootMessage.textContent = event.data.step;\n        bootProgress.value = event.data.value;\n        break;\n      }\n      case \"console\": {\n        bootConsoleOutput.textContent += event.data.message;\n        break;\n      }\n      default: {\n        console.log(\"Unknown message type:\", event.data.type);\n      }\n    }\n  })\n\n  return await navigator.serviceWorker.ready;\n}\n\nasync function init() {\n  const bootMessage = document.getElementById(\"boot-message\");\n  const bootProgress = document.getElementById(\"boot-progress\");\n  const bootConsoleOutput = document.getElementById(\"boot-console-output\");\n  const registration = await boot({ bootMessage, bootProgress, bootConsoleOutput });\n  if (!registration) { return; }\n  bootMessage.textContent = \"Service Worker Ready\";\n  bootProgress.value = 100;\n\n  const launchButton = document.getElementById(\"launch-button\");\n  launchButton.disabled = false;\n  launchButton.addEventListener(\"click\", async function() {\n    // Open in a new window\n    window.open(\"/\", \"_blank\");\n  });\n\n  const rebootButton = document.getElementById(\"reboot-button\");\n  rebootButton.disabled = false;\n  rebootButton.addEventListener(\"click\", async function() {\n    await registration.unregister();\n    window.location.reload();\n  });\n}\n\ninit();\n"],
  "mappings": ";AAAA,eAAe,wBAAwB;AACrC,QAAM,mBAAmB,MAAM,UAAU,cAAc,iBAAiB;AACxE,aAAW,gBAAgB,kBAAkB;AAC3C,QAAI,aAAa,WAAW,UAAU,cAAc;AAClD;AAAA,IACF;AAAA,EACF;AAEA,QAAM,UAAU,cAAc,SAAS,gBAAgB;AAAA,IACrD,OAAO;AAAA,IAAK,MAAM;AAAA,EACpB,CAAC;AACH;AAEA,eAAe,KAAK,EAAE,aAAa,cAAc,kBAAkB,GAAG;AACpE,MAAI,EAAE,mBAAmB,YAAY;AACnC,YAAQ,MAAM,kDAAkD;AAChE;AAAA,EACF;AACA,MAAI,UAAU,cAAc,YAAY;AACtC,YAAQ,IAAI,gCAAgC;AAC5C,WAAO,UAAU,cAAc;AAAA,EACjC;AAEA,QAAM,sBAAsB;AAE5B,cAAY,cAAc;AAE1B,YAAU,cAAc,iBAAiB,WAAW,SAAS,OAAO;AAClE,YAAQ,MAAM,KAAK,MAAM;AAAA,MACvB,KAAK,YAAY;AACf,oBAAY,cAAc,MAAM,KAAK;AACrC,qBAAa,QAAQ,MAAM,KAAK;AAChC;AAAA,MACF;AAAA,MACA,KAAK,WAAW;AACd,0BAAkB,eAAe,MAAM,KAAK;AAC5C;AAAA,MACF;AAAA,MACA,SAAS;AACP,gBAAQ,IAAI,yBAAyB,MAAM,KAAK,IAAI;AAAA,MACtD;AAAA,IACF;AAAA,EACF,CAAC;AAED,SAAO,MAAM,UAAU,cAAc;AACvC;AAEA,eAAe,OAAO;AACpB,QAAM,cAAc,SAAS,eAAe,cAAc;AAC1D,QAAM,eAAe,SAAS,eAAe,eAAe;AAC5D,QAAM,oBAAoB,SAAS,eAAe,qBAAqB;AACvE,QAAM,eAAe,MAAM,KAAK,EAAE,aAAa,cAAc,kBAAkB,CAAC;AAChF,MAAI,CAAC,cAAc;AAAE;AAAA,EAAQ;AAC7B,cAAY,cAAc;AAC1B,eAAa,QAAQ;AAErB,QAAM,eAAe,SAAS,eAAe,eAAe;AAC5D,eAAa,WAAW;AACxB,eAAa,iBAAiB,SAAS,iBAAiB;AAEtD,WAAO,KAAK,KAAK,QAAQ;AAAA,EAC3B,CAAC;AAED,QAAM,eAAe,SAAS,eAAe,eAAe;AAC5D,eAAa,WAAW;AACxB,eAAa,iBAAiB,SAAS,iBAAiB;AACtD,UAAM,aAAa,WAAW;AAC9B,WAAO,SAAS,OAAO;AAAA,EACzB,CAAC;AACH;AAEA,KAAK;",
  "names": []
}
